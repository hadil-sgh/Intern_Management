import Contract from "../models/Contract.js";
import PDFDocument from "pdfkit";
import Credit from "../models/Credit.js";
export const createContract = async (req, res) => {
  try {
    const contract = await Contract.create(req.body);
    res.status(201).json(contract);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
};

export const getAllContracts = async (req, res) => {
  try {
    const contracts = await Contract.findAll();
    res.status(200).json(contracts);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
};

export const getContractById = async (req, res) => {
  try {
    const contract = await Contract.findByPk(req.params.id);
    if (contract) {
      res.status(200).json(contract);
    } else {
      res.status(404).json({ error: "Contract not found" });
    }
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
};

export const updateContract = async (req, res) => {
  try {
    const [updated] = await Contract.update(req.body, {
      where: { id: req.params.id },
    });
    if (updated) {
      const updatedContract = await Contract.findByPk(req.params.id);
      res.status(200).json(updatedContract);
    } else {
      res.status(404).json({ error: "Contract not found" });
    }
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
};

export const deleteContract = async (req, res) => {
  try {
    const deleted = await Contract.destroy({
      where: { id: req.params.id },
    });
    if (deleted) {
      res.status(204).json();
    } else {
      res.status(404).json({ error: "Contract not found" });
    }
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
};

export const generateContractPdf = async (req, res) => {
  try {
    const contract = await Contract.findByPk(req.params.id, {
      include: [Credit],
    });

    if (!contract) {
      return res.status(404).json({ error: "Contract not found" });
    }

    const doc = new PDFDocument({
      size: "A4",
      margin: 50,
      info: {
        Title: "Contract ",
        Author: "Trends",
      },
    });

    res.setHeader("Content-Disposition", "attachment; filename=contract.pdf");
    res.setHeader("Content-Type", "application/pdf");

    doc.pipe(res);

    doc
      .fontSize(30)
      .fillColor("#284a1e")
      .text("Contract ", { align: "center" })
      .moveDown(0.5);

    doc
      .lineWidth(2)
      .strokeColor("#284a1e")
      .moveTo(50, doc.y)
      .lineTo(550, doc.y)
      .stroke()
      .moveDown(2);

    const textStyle = {
      fontSize: 12,
      fillColor: "#333333",
    };

    doc
      .fontSize(14)
      .fillColor("#4a1e1e")
      .text(
        "This Contract Agreement is made between the undersigned parties, binding them to the terms detailed herein.",
        { align: "center" }
      )
      .moveDown(2);

    doc
      .fontSize(textStyle.fontSize)
      .fillColor(textStyle.fillColor)
      .text(
        `Contract Reference: ${contract.contractReference}

                The Intern: ${contract.borrower}

                Interest Rate: ${contract.interestRate}%

                Interest Rate Type: ${contract.interestRateType}

                Collateral Description: ${
                  contract.collateralDescription || "N/A"
                }

                Residence Location: ${contract.residenceLocation}


                Terms and Conditions:
                1. The Intern agrees to repay the principal amount along with interest as specified
                 above.
                2. The Intern must adhere to the payment dates specified in the contract.
                3. Any delays in payment may incur late fees as mentioned above.
                4. In case of default, the consequences will be as outlined in the contract.
                5. The Intern is required to provide collateral as described above.
                6. This contract is governed by the laws of the applicable jurisdiction.









                                                          Lender Signature: _________________________
                                                          Borrower Signature: _________________________`,
        { align: "left" }
      )
      .moveDown(2);

    doc
      .fontSize(12)
      .fillColor("#999999")
      .text("Generated by Trends", { align: "center" })
      .moveDown(0.5);

    doc
      .fontSize(10)
      .fillColor("#999999")
      .text(`Generated on ${new Date().toLocaleDateString()}`, {
        align: "center",
      });

    doc.end();
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
};
